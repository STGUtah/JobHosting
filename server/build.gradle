configurations {
  jaxb
}

buildscript {
  ext {
    springBootVersion = '1.3.2.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

// tag::wsdl[]
task genJaxb {
  ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
  ext.classesDir = "${buildDir}/classes/jaxb"
  ext.schema = "http://schemas.monster.com/current/WSDL/MonsterBusinessGateway.wsdl"

  outputs.dir classesDir

  doLast() {
    project.ant {
      taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
        classpath: configurations.jaxb.asPath
      mkdir(dir: sourcesDir)
      mkdir(dir: classesDir)

      xjc(destdir: sourcesDir, schema: schema,
        package: "com.stgconsulting.wsdl") {
        arg(value: "-wsdl")
        arg(value: "-extension")
        arg(value: "-b")
        arg(value: "server/binding.xjb")
        produces(dir: sourcesDir, includes: "**/*.java")
      }

      javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
        debugLevel: "lines,vars,source",
        classpath: configurations.jaxb.asPath) {
        src(path: sourcesDir)
        include(name: "**/*.java")
        include(name: "*.java")
      }

      copy(todir: classesDir) {
        fileset(dir: sourcesDir, erroronmissingdir: false) {
          exclude(name: "**/*.java")
        }
      }
    }
  }
}
// end::wsdl[]

jar {
  baseName = 'job-hosting'
  version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  compile 'org.springframework.boot:spring-boot-devtools'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.boot:spring-boot-starter-data-jpa'
  compile 'org.springframework.boot:spring-boot-starter-data-rest'
  compile 'org.springframework.boot:spring-boot-starter-security'
  compile 'org.springframework:spring-messaging'
  compile 'org.springframework.ws:spring-ws-core'
  compile 'org.projectlombok:lombok:1.16.4'
  compile 'com.h2database:h2'
  compile(files(genJaxb.classesDir).builtBy(genJaxb))

  jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"

  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'org.springframework.security:spring-security-test'
}


eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }
}

jar {
  from genJaxb.classesDir
  from('../web/dist') {
    into 'static'
  }
}

jar.dependsOn(':web:assemble')
